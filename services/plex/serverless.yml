service: plex-ec2-services-plex
provider:
  name: aws
  runtime: python3.7
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-west-2'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ssm:SendCommand
      Resource: 
        - arn:aws:ec2:#{AWS::Region}:#{AWS::AccountId}:instance/*
        - arn:aws:ssm:#{AWS::Region}::document/AWS-RunShellScript
    - Effect: Allow
      Action:
        - ssm:GetCommandInvocation
      Resource: 
        - arn:aws:ssm:#{AWS::Region}:#{AWS::AccountId}:*
    - Effect: Allow
      Action:
        - ssm:GetParametersByPath
      Resource: 
        - arn:aws:ssm:us-west-2:285012317380:parameter/plex-ec2/
    - Effect: Allow
      Action:
        - cloudformation:DescribeStacks
        - cloudformation:CreateStack
        - cloudformation:DeleteStack
      Resource: 
        - arn:aws:cloudformation:#{AWS::Region}:#{AWS::AccountId}:stack/*
    - Effect: Allow
      Action:
        - "*"
        - s3:GetObject
        - iam:GetRole
        - iam:CreateRole
        - logs:CreateLogStream
        - ec2:CreateInternetGateway
        - ec2:DeleteInternetGateway
        - ec2:CreateVpc
        - ec2:DeleteVpc
      Resource: 
        - '*'
    - Effect: Allow
      Action:
        - states:StartExecution
        - states:ListExecutions
      Resource:
        - "${self:resources.Outputs.PlexServerUpStepArn.Value}"
        - "${self:resources.Outputs.PlexServerDownStepArn.Value}"
    - Effect: Allow
      Action:
        - cloudformation:DescribeStacks
      Resource: 
        - arn:aws:cloudformation:#{AWS::Region}:#{AWS::AccountId}:stack/*
  apiGateway:
    restApiId: 
      Fn::ImportValue: plex-ec2-resources-${self:provider.stage}-RestApiId
    restApiRootResourceId: 
      Fn::ImportValue: plex-ec2-resources-${self:provider.stage}-RestApiRootResourceId
  environment:
    stage: ${self:provider.stage}
    plexServerUpStepArn: ${self:resources.Outputs.PlexServerUpStepArn.Value}
    plexServerDownStepArn: ${self:resources.Outputs.PlexServerDownStepArn.Value}
    availabilityZone: ${self:custom.availabilityZone}
    apiEndpoint:
      Fn::ImportValue: plex-ec2-resources-${self:provider.stage}-RestApiEndpoint
custom:
  availabilityZone:
    Fn::Select: 
      - 0
      - Fn::GetAZs: ${self:provider.region}
  lambdaArnBase: "arn:aws:lambda:${self:provider.region}:#{AWS::AccountId}:function:${self:service}-${self:provider.stage}"
  retryStep:
    - ErrorEquals:
      - States.ALL
      IntervalSeconds: 5
      MaxAttempts: 3
      BackoffRate: 2
  pythonRequirements:
    dockerizePip: true
plugins:
  - serverless-step-functions
  - serverless-pseudo-parameters
  - serverless-python-requirements
package:
  exclude:
    - 'node_modules/**'
    - 'venv/**'
functions:
  start_plex_ec2:
    handler: functions/start_plex_ec2.handler
  stop_plex_ec2:
    handler: functions/stop_plex_ec2.handler
  attach_plex_ip:
    handler: functions/attach_plex_ip.handler
  release_plex_ip:
    handler: functions/release_plex_ip.handler
  check_instance_state:
    handler: functions/check_instance_state.handler
  check_instance_status:
    handler: functions/check_instance_status.handler
  check_run_command_status:
    handler: functions/check_run_command_status.handler
  claim_plex_server:
    handler: functions/claim_plex_server.handler
  myplex_get_account_token:
    handler: functions/myplex_get_account_token.handler
  myplex_account_cleanup:
    handler: functions/myplex_account_cleanup.handler
  myplex_server_settings:
    handler: functions/myplex_server_settings.handler
  myplex_add_movies_section:
    handler: functions/myplex_add_movies_section.handler
  invoke_plex_server_up:
    handler: functions/invoke_plex_server_up.handler
    events:
      - http:
          path: invoke-plex-server-up
          method: get
  invoke_plex_server_down:
    handler: functions/invoke_plex_server_down.handler
    events:
      - http:
          path: invoke-plex-server-down
          method: get
stepFunctions:
  stateMachines:
    plexServerUpStep: ${file(step_functions/plex_server_up_step.yml)}
    plexServerDownStep: ${file(step_functions/plex_server_down_step.yml)}
resources:
  Outputs:
    PlexServerUpStepArn:
      Description: The ARN of the Plex Server Setup (with IP) State Machine
      Value:
        Ref: PlexServerUpStepDash${self:provider.stage}
    PlexServerDownStepArn:
      Description: The ARN of the Plex Server Setup (without IP) State Machine
      Value:
        Ref: PlexServerDownStepDash${self:provider.stage}
