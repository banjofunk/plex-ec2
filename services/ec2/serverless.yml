service: plex-ec2-services-ec2
provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-west-2'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ssm:SendCommand
      Resource: 
        - arn:aws:ec2:#{AWS::Region}:#{AWS::AccountId}:instance/*
        - arn:aws:ssm:#{AWS::Region}::document/AWS-RunShellScript
    - Effect: Allow
      Action:
        - ssm:GetParametersByPath
      Resource: 
        - arn:aws:ssm:#{AWS::Region}:#{AWS::AccountId}:parameter/plex-ec2/
    - Effect: Allow
      Action:
        - cloudformation:DescribeStacks
        - cloudformation:CreateStack
        - cloudformation:DeleteStack
      Resource: 
        - arn:aws:cloudformation:#{AWS::Region}:#{AWS::AccountId}:stack/*
    - Effect: Allow
      Action:
        - "*"
        - s3:GetObject
        - iam:GetRole
        - iam:CreateRole
        - logs:CreateLogStream
        - ec2:CreateInternetGateway
        - ec2:DeleteInternetGateway
        - ec2:CreateVpc
        - ec2:DeleteVpc
      Resource: 
        - '*'
  apiGateway:
    restApiId: 
      Fn::ImportValue: plex-ec2-resources-${self:provider.stage}-RestApiId
    restApiRootResourceId: 
      Fn::ImportValue: plex-ec2-resources-${self:provider.stage}-RestApiRootResourceId
  environment:
    stage: ${self:provider.stage}
    availabilityZone: ${self:custom.availabilityZone}
    apiEndpoint:
      Fn::ImportValue: plex-ec2-resources-${self:provider.stage}-RestApiEndpoint
custom:
  restApiId:
    Fn::ImportValue: plex-ec2-resources-dev-RestApiId
  availabilityZone:
    Fn::Select: 
      - 0
      - Fn::GetAZs: ${self:provider.region}
plugins:
  - serverless-pseudo-parameters
package:
  exclude:
    - node_modules/**
functions:
  createPlexEc2Instance:
    handler: functions/createPlexEc2Instance.handler
  deletePlexEc2Instance:
    handler: functions/deletePlexEc2Instance.handler
  stopEc2Instance:
    handler: functions/stopEc2Instance.handler
  startEc2Instance:
    handler: functions/startEc2Instance.handler
  searchTorrent:
    handler: functions/searchTorrent.handler
resources:
  Conditions:
    CreateResources: 
      Fn::Equals:
        - ${ssm:/plex-ec2/create-resources, 'true'}
        - 'true'
  Resources:
    PlexRestApi:
      Type: AWS::ApiGateway::RestApi
      Properties:
        Name: plexEc2Api
        Description: Plex Ec2 API Gateway
