service: aws-nodejs
provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-west-2'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ssm:SendCommand
      Resource: 
        - arn:aws:ec2:#{AWS::Region}:#{AWS::AccountId}:instance/*
        - arn:aws:ssm:us-west-2::document/AWS-RunShellScript
    - Effect: Allow
      Action:
        - ssm:GetParametersByPath
      Resource: 
        - arn:aws:ssm:us-west-2:285012317380:parameter/plex-ec2/
  apiGateway:
    restApiId: "#{PlexRestApi}"
    restApiRootResourceId: "#{PlexRestApi.RootResourceId}" 
  environment:
    stage: ${self:provider.stage}
    plexEc2Id: ${self:resources.Outputs.PlexEc2Id.Value}
    plexIp: "#{PlexEc2.PublicIp}"
    apiBaseUrl: 'https://#{PlexRestApi}.execute-api.${self:provider.region}.amazonaws.com/${self:provider.stage}'
custom:
  pythonRequirements:
    dockerizePip: true
  availabilityZone:
    Fn::Select: 
      - 0
      - Fn::GetAZs: ${self:provider.region}
plugins:
  - serverless-pseudo-parameters
  - serverless-python-requirements
package:
  individually: true
functions:
  searchTorrent:
    handler: functions/searchTorrent.handler
  setPlexClaimToken:
    handler: functions/setPlexClaimToken.handler
    events:
      - http:
          path: set-plex-claim-token
          method: get
  associateClaimToken:
    handler: functions/python/associateClaimToken.handler
    runtime: python3.7
    timeout: 180
    events:
      - http:
          path: associate-claim-token
          method: get
resources:
  Conditions:
    CreateResources: 
      Fn::Equals:
        - ${ssm:/plex-ec2/create-resources, 'true'}
        - 'true'
  Resources:
    PlexRestApi:
      Type: AWS::ApiGateway::RestApi
      Properties:
        Name: plexEc2Api
        Description: Plex Ec2 API Gateway
    PlexMovieBucket:
      Type: AWS::S3::Bucket
      Condition: CreateResources
      DeletionPolicy: Retain
      Properties:
        BucketName: plex-movie
    PlexUsernameParameter:
      Type: AWS::SSM::Parameter
      Condition: CreateResources
      DeletionPolicy: Retain
      Properties:
        Name: /plex-ec2/username
        Type: String
        Value: username
        Description: Plex username for plex-ec2
    PlexPasswordParameter:
      Type: AWS::SSM::Parameter
      Condition: CreateResources
      DeletionPolicy: Retain
      Properties:
        Name: /plex-ec2/password
        Type: String
        Value: password
        Description: Plex password for plex-ec2
    CreateResourcesParameter:
      Type: AWS::SSM::Parameter
      DeletionPolicy: Retain
      Properties:
        Name: /plex-ec2/create-resources
        Type: String
        Value: 'false'
        Description: plex-ec2 resource creation status
    VPC:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: 10.0.0.0/16
        Tags:
          - Key: Application
            Value: 
              Ref: AWS::StackId
    Subnet:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId: 
          Ref: VPC
        CidrBlock: 10.0.0.0/24
        AvailabilityZone: ${self:custom.availabilityZone}
        Tags:
          - Key: Application
            Value: 
              Ref: AWS::StackId
    SubnetNetworkAclAssociation:
      Type: AWS::EC2::SubnetNetworkAclAssociation
      Properties:
        SubnetId: 
          Ref: Subnet
        NetworkAclId: 
          Ref: NetworkAcl
    NetworkAcl:
      Type: AWS::EC2::NetworkAcl
      Properties:
        VpcId: 
          Ref: VPC
        Tags:
          - Key: Application
            Value: 
              Ref: AWS::StackId
    InboundHTTPNetworkAclEntry:
      Type: AWS::EC2::NetworkAclEntry
      Properties:
        NetworkAclId: 
          Ref: NetworkAcl
        RuleNumber: 100
        Protocol: 6
        RuleAction: allow
        Egress: false
        CidrBlock: 0.0.0.0/0
        PortRange:
          From: 80
          To: 80
    InboundSSHNetworkAclEntry:
      Type: AWS::EC2::NetworkAclEntry
      Properties:
        NetworkAclId: 
          Ref: NetworkAcl
        RuleNumber: 101
        Protocol: 6
        RuleAction: allow
        Egress: false
        CidrBlock: 0.0.0.0/0
        PortRange:
          From: 22
          To: 22
    InboundResponsePortsNetworkAclEntry:
      Type: AWS::EC2::NetworkAclEntry
      Properties:
        NetworkAclId: 
          Ref: NetworkAcl
        RuleNumber: 102
        Protocol: 6
        RuleAction: allow
        Egress: false
        CidrBlock: 0.0.0.0/0
        PortRange:
          From: 1024
          To: 65535
    OutBoundHTTPNetworkAclEntry:
      Type: AWS::EC2::NetworkAclEntry
      Properties:
        NetworkAclId: 
          Ref: NetworkAcl
        RuleNumber: 100
        Protocol: 6
        RuleAction: allow
        Egress: true
        CidrBlock: 0.0.0.0/0
        PortRange:
          From: 80
          To: 80
    OutBoundHTTPSNetworkAclEntry:
      Type: AWS::EC2::NetworkAclEntry
      Properties:
        NetworkAclId: 
          Ref: NetworkAcl
        RuleNumber: 101
        Protocol: 6
        RuleAction: allow
        Egress: true
        CidrBlock: 0.0.0.0/0
        PortRange:
          From: 443
          To: 443
    OutBoundResponsePortsNetworkAclEntry:
      Type: AWS::EC2::NetworkAclEntry
      Properties:
        NetworkAclId: 
          Ref: NetworkAcl
        RuleNumber: 102
        Protocol: 6
        RuleAction: allow
        Egress: true
        CidrBlock: 0.0.0.0/0
        PortRange:
          From: 1024
          To: 65535
    SecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupName: PlexSecurityGroup
        GroupDescription: Allow ssh and plex ports
        VpcId: 
          Ref: VPC
        SecurityGroupEgress:
          - CidrIp: 0.0.0.0/0
            IpProtocol: -1
        SecurityGroupIngress:
          - CidrIp: 0.0.0.0/0
            IpProtocol: tcp
            FromPort: 22
            ToPort: 22
          - CidrIp: 0.0.0.0/0
            IpProtocol: tcp
            FromPort: 32400
            ToPort: 32400
    PlexEc2Role:
      Type: AWS::IAM::Role
      Properties:
        RoleName: PlexEc2Role
        AssumeRolePolicyDocument:
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - ec2.amazonaws.com
              Action:
                - sts:AssumeRole
        Path: /
    PlexEc2InstanceProfile:
      Type: AWS::IAM::InstanceProfile
      Properties:
        Path: /
        Roles:
          - Ref: PlexEc2Role
    PlexEc2RolePolicies:
      Type: AWS::IAM::Policy
      Properties:
        PolicyName: PlexEc2
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action: 
                - ssmmessages:*
                - ec2messages:*
                - ssm:UpdateInstanceInformation
                - ssm:ListCommands
                - ssm:ListCommandInvocations
                - ssm:GetDocument
              Resource: '*'
            - Effect: Allow
              Action: 
                - ssm:SendCommand
              Resource: 
                - arn:aws:ssm:us-west-2::document/AWS-RunShellScript
            - Effect: Allow
              Action: 
                - s3:GetBucketLocation
                - s3:ListAllMyBuckets
              Resource: arn:aws:s3:::*
            - Effect: Allow
              Action: s3:ListBucket
              Resource: 
                - arn:aws:s3:::plex-movie
                - arn:aws:s3:::plex-tv
            - Effect: Allow
              Action: 
                - s3:PutObject
                - s3:GetObject
                - s3:DeleteObject
              Resource: 
                - arn:aws:s3:::plex-movie
                - arn:aws:s3:::plex-movie/*
                - arn:aws:s3:::plex-tv
                - arn:aws:s3:::plex-tv/*
        Roles:
          - Ref: PlexEc2Role
    PlexEc2:
      Type: AWS::EC2::Instance
      DependsOn:
        - SecurityGroup
        - PlexRestApi
      Properties:
        ImageId: ami-023578bcb54b36edf
        InstanceType: t2.medium
        KeyName: plex-ec2
        AvailabilityZone: ${self:custom.availabilityZone}
        IamInstanceProfile: 
          Ref: PlexEc2InstanceProfile
        NetworkInterfaces:
          - AssociatePublicIpAddress: true
            DeviceIndex: 0
            SubnetId: 
              Ref: Subnet
            GroupSet:
              - Ref: SecurityGroup
        BlockDeviceMappings:
          - DeviceName: /dev/sdb
            Ebs:
              VolumeType: gp2
              VolumeSize: 10
              DeleteOnTermination: true
        UserData: 
          "Fn::Base64": 
            "Fn::Sub": | 
              #!/bin/bash -v
              yum update -y
              yum install -y aws-cfn-bootstrap
              /opt/aws/bin/cfn-init -s #{AWS::StackId} -r PlexEc2 --region #{AWS::Region} ||
              error_exit 'failed to execute cfn-init'
      Metadata:
        Comment: Plex Dependencies
        AWS::CloudFormation::Init:
          config:
            packages:
              yum: 
                automake: [] 
                fuse: [] 
                fuse-devel: [] 
                gcc-c++: [] 
                git: [] 
                libcurl-devel: [] 
                libxml2-devel: [] 
                make: [] 
                openssl-devel: []
                mailcap: []
                docker: []
                jq: []
            files:
              /etc/fuse.conf: 
                content: | 
                  user_allow_other
                mode: "000644"
                owner: "root"
                group: "root"
              /home/ec2-user/.env: 
                content: | 
                  PLEX_CLAIM="claim-"
                mode: "000644"
                owner: "root"
                group: "root"
              /home/ec2-user/docker-compose.yml: 
                content: | 
                  version: '2'
                  services:
                    plex:
                      container_name: plex
                      image: plexinc/pms-docker
                      restart: unless-stopped
                      ports:
                        - 32400:32400/tcp
                        - 3005:3005/tcp
                        - 8324:8324/tcp
                        - 32469:32469/tcp
                        - 1900:1900/udp
                        - 32410:32410/udp
                        - 32412:32412/udp
                        - 32413:32413/udp
                        - 32414:32414/udp
                      environment:
                        - TZ="America/Los_Angeles"
                        - PLEX_CLAIM=$PLEX_CLAIM
                        - ADVERTISE_IP=http://0.0.0.0:32400/
                      hostname: Plex-Ec2
                      volumes:
                        - /home/ec2-user/plex-config/config:/config 
                        - /home/ec2-user/plex-config/transcode:/transcode 
                        - /home/ec2-user/movies:/movies 
                mode: "000644"
                owner: "root"
                group: "root"
            commands: 
              01_ssm_agent: 
                command: yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
              01_s3fs_clone: 
                command: git clone https://github.com/s3fs-fuse/s3fs-fuse.git
                cwd: /home/ec2-user
              02_s3fs_make: 
                command: |
                  ./autogen.sh 
                  ./configure --prefix=/usr --with-openssl
                  make
                  make install
                cwd: /home/ec2-user/s3fs-fuse
              03_mount: 
                command: |
                  echo s3fs#plex-movie /home/ec2-user/movies fuse _netdev,allow_other,use_cache=/tmp,umask=0007,uid=$(id -u ec2-user),gid=$(id -u ec2-user),iam_role=PlexEc2Role,auto 0 0 >> /etc/fstab
                  echo /dev/sdb /home/ec2-user/plex-config ext4 defaults,nofail 0 0 >> /etc/fstab
                  mkdir -p /home/ec2-user/movies
                  mkdir -p /home/ec2-user/plex-config
                  mkfs.ext4 /dev/sdb
                  mount -a
              04_plex_mkdir: 
                command: |
                  mkdir -p /home/ec2-user/plex-config/config
                  mkdir -p /home/ec2-user/plex-config/transcode
              06_compose_install: 
                command: |
                  curl -L https://github.com/docker/compose/releases/download/1.25.5/docker-compose-Linux-x86_64 > /usr/local/bin/docker-compose
                  chmod a+x /usr/local/bin/docker-compose
                  /usr/local/bin/docker-compose -p plex up -d
                cwd: /home/ec2-user
              07_claim_token: 
                command: |
                  curl -L -f --retry 10 --retry-delay 30 'https://#{PlexRestApi}.execute-api.${self:provider.region}.amazonaws.com/${self:provider.stage}/set-plex-claim-token'
            services: 
              sysvinit: 
                docker: 
                  enabled: true

    PlexInternetGateway:
      Type: AWS::EC2::InternetGateway
      Properties:
        Tags:
          - Key: Application
            Value: 
              Ref: AWS::StackId
    PlexAttachGateway:
      Type: AWS::EC2::VPCGatewayAttachment
      Properties:
        VpcId: 
          Ref: VPC
        InternetGatewayId: 
          Ref: PlexInternetGateway
    PlexIPAddress:
      Type: AWS::EC2::EIP
      DependsOn: PlexAttachGateway
      Properties:
        Domain: vpc
        InstanceId: 
          Ref: PlexEc2
    RouteTable:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId: 
          Ref: VPC
        Tags:
          - Key: Application
            Value: 
              Ref: AWS::StackId
    PlexRoute:
      Type: AWS::EC2::Route
      DependsOn: PlexAttachGateway
      Properties:
        RouteTableId: 
          Ref: RouteTable
        DestinationCidrBlock: 0.0.0.0/0
        GatewayId: 
          Ref: PlexInternetGateway
    SubnetRouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        SubnetId: 
          Ref: Subnet
        RouteTableId: 
          Ref: RouteTable
  Outputs:
    PlexApiResourceId:
      Value:
        "Fn::GetAtt": 
          - PlexRestApi
          - RootResourceId
    PlexApiId:
      Value:
        Ref: PlexRestApi
    PlexEc2Id:
      Value:
        Ref: PlexEc2
    PlexIp:
      Value: 
        Fn::GetAtt:
          - PlexEc2
          - PublicIp