AWSTemplateFormatVersion: "2010-09-09"
Description: A sample template
Parameters: 
  Stage: 
    Type: String
    Default: dev
    Description: plex vpc ec2 Stage
  ApiEndpoint: 
    Type: String
    Description: plex vpc ec2 ApiEndpoint
  AvailabilityZone: 
    Type: String
    Description: plex vpc ec2 AvailabilityZone
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      Tags:
        - Key: Application
          Value: 
            Ref: AWS::StackId
  Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: 
        Ref: VPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: !Ref AvailabilityZone
      Tags:
        - Key: Application
          Value: 
            Ref: AWS::StackId
  SubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: 
        Ref: Subnet
      NetworkAclId: 
        Ref: NetworkAcl
  NetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: 
        Ref: VPC
      Tags:
        - Key: Application
          Value: 
            Ref: AWS::StackId
  InboundHTTPNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: 
        Ref: NetworkAcl
      RuleNumber: 100
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 80
        To: 80
  InboundSSHNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: 
        Ref: NetworkAcl
      RuleNumber: 101
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 22
        To: 22
  InboundResponsePortsNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: 
        Ref: NetworkAcl
      RuleNumber: 102
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 1024
        To: 65535
  OutBoundHTTPNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: 
        Ref: NetworkAcl
      RuleNumber: 100
      Protocol: 6
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 80
        To: 80
  OutBoundHTTPSNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: 
        Ref: NetworkAcl
      RuleNumber: 101
      Protocol: 6
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 443
        To: 443
  OutBoundResponsePortsNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: 
        Ref: NetworkAcl
      RuleNumber: 102
      Protocol: 6
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 1024
        To: 65535
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: PlexSecurityGroup
      GroupDescription: Allow ssh and plex ports
      VpcId: 
        Ref: VPC
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 32400
          ToPort: 32400
  PlexEc2Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: PlexEc2Role
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
  PlexEc2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - Ref: PlexEc2Role
  PlexEc2RolePolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: PlexEc2
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action: 
              - ssmmessages:*
              - ec2messages:*
              - ssm:UpdateInstanceInformation
              - ssm:ListCommands
              - ssm:ListCommandInvocations
              - ssm:ListInstanceAssociations
              - ssm:GetDocument
              - logs:PutLogEvents
            Resource: '*'
          - Effect: Allow
            Action: 
              - ssm:SendCommand
            Resource: 
              - arn:aws:ssm:us-west-2::document/AWS-RunShellScript
          - Effect: Allow
            Action: 
              - s3:GetBucketLocation
              - s3:ListAllMyBuckets
            Resource: arn:aws:s3:::*
          - Effect: Allow
            Action: s3:ListBucket
            Resource: 
              - arn:aws:s3:::plex-movie
              - arn:aws:s3:::plex-tv
          - Effect: Allow
            Action: 
              - s3:PutObject
              - s3:GetObject
              - s3:DeleteObject
            Resource: 
              - arn:aws:s3:::plex-movie
              - arn:aws:s3:::plex-movie/*
              - arn:aws:s3:::plex-tv
              - arn:aws:s3:::plex-tv/*
      Roles:
        - Ref: PlexEc2Role
  PlexEc2:
    Type: AWS::EC2::Instance
    DependsOn:
      - SecurityGroup
    Properties:
      ImageId: ami-023578bcb54b36edf
      InstanceType: t2.medium
      KeyName: plex-ec2
      AvailabilityZone: !Ref AvailabilityZone
      IamInstanceProfile: 
        Ref: PlexEc2InstanceProfile
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          SubnetId: 
            Ref: Subnet
          GroupSet:
            - Ref: SecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/sdb
          Ebs:
            VolumeType: gp2
            VolumeSize: 10
            DeleteOnTermination: true
      UserData: 
        "Fn::Base64": 
          "Fn::Sub": | 
            #!/bin/bash -v
            yum update -y
            yum install -y aws-cfn-bootstrap
            /opt/aws/bin/cfn-init -s ${AWS::StackId} -r PlexEc2 --region ${AWS::Region} ||
            error_exit 'failed to execute cfn-init'
    Metadata:
      Comment: Plex Dependencies
      AWS::CloudFormation::Init:
        config:
          packages:
            yum: 
              automake: [] 
              fuse: [] 
              fuse-devel: [] 
              gcc-c++: [] 
              git: [] 
              libcurl-devel: [] 
              libxml2-devel: [] 
              make: [] 
              openssl-devel: []
              mailcap: []
              wget: []
              docker: []
              jq: []
          files:
            /etc/fuse.conf: 
              content: | 
                user_allow_other
              mode: "000644"
              owner: "root"
              group: "root"
          commands: 
            01_ssm_agent: 
              command: |
                yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
                wget https://s3.amazonaws.com/amazoncloudwatch-agent/amazon_linux/amd64/latest/amazon-cloudwatch-agent.rpm
                rpm -U ./amazon-cloudwatch-agent.rpm
                sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s
              cwd: /home/ec2-user
            02_s3fs_clone: 
              command: git clone https://github.com/s3fs-fuse/s3fs-fuse.git
              cwd: /home/ec2-user
            03_s3fs_make: 
              command: |
                ./autogen.sh 
                ./configure --prefix=/usr --with-openssl
                make
                make install
              cwd: /home/ec2-user/s3fs-fuse
            04_mount: 
              command: |
                echo s3fs#plex-movie /home/ec2-user/movies fuse _netdev,allow_other,use_cache=/tmp,umask=0007,uid=$(id -u ec2-user),gid=$(id -u ec2-user),iam_role=PlexEc2Role,auto 0 0 >> /etc/fstab
                echo /dev/sdb /home/ec2-user/plex-config ext4 defaults,nofail 0 0 >> /etc/fstab
                mkdir -p /home/ec2-user/movies
                mkdir -p /home/ec2-user/plex-config
                mkfs.ext4 /dev/sdb
                mount -a
            05_plex_mkdir: 
              command: |
                mkdir -p /home/ec2-user/plex-config/config
                mkdir -p /home/ec2-user/plex-config/transcode
            06_docker_image: 
              command: docker image pull plexinc/pms-docker
              cwd: /home/ec2-user
            07_tokens:
              command: |
                plex_username=${ssm:/plex-ec2/username}
                plex_password=${ssm:/plex-ec2/password~true}
                auth_token=$(curl -X POST "https://plex.tv/users/sign_in.json?user[login]=$plex_username&user[password]=$plex_password&X-Plex-Client-Identifier=plex-ec2" \
                  | jq .user.authentication_token \
                  | tr -d '"')
                claim_token=$(curl -L "https://plex.tv/api/claim/token.json?X-Plex-Token=$auth_token" | jq .token | tr -d '"')
                docker run \
                  -d \
                  --name plex \
                  --restart unless-stopped \
                  -p 32400:32400/tcp \
                  -p 3005:3005/tcp \
                  -p 8324:8324/tcp \
                  -p 32469:32469/tcp \
                  -p 1900:1900/udp \
                  -p 32410:32410/udp \
                  -p 32412:32412/udp \
                  -p 32413:32413/udp \
                  -p 32414:32414/udp \
                  -e TZ="America/Los_Angeles" \
                  -e PLEX_CLAIM="$claim_token" \
                  -e ADVERTISE_IP=http://0.0.0.0:32400/ \
                  -h plex-ec2 \
                  -v /home/ec2-user/plex-config/config:/config \
                  -v /home/ec2-user/plex-config/transcode:/transcode \
                  -v /home/ec2-user/movies:/movies \
                plexinc/pms-docker
                sleep 2
              cwd: /home/ec2-user
            07_invoke_plex_step:
              command: |
                echo "curling $API_ENDPOINT/invoke-plex-server-setup"
                curl -L "$API_ENDPOINT/invoke-plex-server-setup"
              env: 
                API_ENDPOINT: !Ref ApiEndpoint
              cwd: /home/ec2-user
          services: 
            sysvinit: 
              docker: 
                enabled: true
  PlexInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Application
          Value: 
            Ref: AWS::StackId
  PlexAttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: 
        Ref: VPC
      InternetGatewayId: 
        Ref: PlexInternetGateway
  PlexIPAddress:
    Type: AWS::EC2::EIP
    DependsOn: PlexAttachGateway
    Properties:
      Domain: vpc
      InstanceId: 
        Ref: PlexEc2
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: 
        Ref: VPC
      Tags:
        - Key: Application
          Value: 
            Ref: AWS::StackId
  PlexRoute:
    Type: AWS::EC2::Route
    DependsOn: PlexAttachGateway
    Properties:
      RouteTableId: 
        Ref: RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: 
        Ref: PlexInternetGateway
  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: 
        Ref: Subnet
      RouteTableId: 
        Ref: RouteTable
Outputs:
  PlexEc2InstanceId:
    Description: Plex Ec2 - ec2 instance id
    Value:
      Ref: PlexEc2
    Export:
      Name: !Sub ${AWS::StackName}-PlexEc2InstanceId
  PlexIp:
    Description: Plex Ec2 - ec2 internet gateway public ip
    Value: 
      Fn::GetAtt:
        - PlexEc2
        - PublicIp
    Export:
      Name: !Sub ${AWS::StackName}-PlexIp